<$PLAN9/src/mkhdr

LIB=libthread.a
SYSOFILES=`sh ./sysofiles.sh`
OFILES=\
	$SYSOFILES\
	channel.$O\
	chanprint.$O\
	create.$O\
	debug.$O\
	exec-unix.$O\
	exit.$O\
	fdwait.$O\
	getpid.$O\
	id.$O\
	iocall.$O\
	ioclose.$O\
	iodial.$O\
	ioopen.$O\
	ioproc.$O\
	ioread.$O\
	ioreadn.$O\
	iosleep.$O\
	iowrite.$O\
	lib.$O\
	main.$O\
	memset.$O\
	memsetd.$O\
	read9pmsg.$O\
	ref.$O\
	sched.$O\
	setproc.$O\
	sleep.$O\

HFILES=\
	$PLAN9/include/thread.h\
	label.h\
	threadimpl.h\

<$PLAN9/src/mksyslib

tfork: tfork.$O $PLAN9/lib/$LIB
	$LD -o tfork tfork.$O $LDFLAGS -lthread -l9

tprimes: tprimes.$O $PLAN9/lib/$LIB
	$LD -o tprimes tprimes.$O $LDFLAGS -lthread -l9

texec: texec.$O $PLAN9/lib/$LIB
	$LD -o texec texec.$O $LDFLAGS -lthread -l9

tspawn: tspawn.$O $PLAN9/lib/$LIB
	$LD -o tspawn tspawn.$O $LDFLAGS -lthread -l9

trend: trend.$O $PLAN9/lib/$LIB
	$LD -o trend trend.$O $LDFLAGS -lthread -l9

tsignal: tsignal.$O $PLAN9/lib/$LIB
	$LD -o tsignal tsignal.$O $LDFLAGS -lthread -l9

CLEANFILES=$CLEANFILES tprimes texec

asm-Linux-ppc.$O: asm-Linux-386.s
asm-Linux-386.$O: asm-FreeBSD-386.s
asm-NetBSD-386.$O: asm-FreeBSD-386.s
asm-OpenBSD-386.$O: asm-FreeBSD-386.s

# sorry
VG=`test -d /home/rsc/pub/valgrind-debian && echo -DUSEVALGRIND`
# VG=

CFLAGS=$CFLAGS $VG

Linux-clone.$O: execproc.ch exit-getpid.ch proctab.ch procstack.ch
